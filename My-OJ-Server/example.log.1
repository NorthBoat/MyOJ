DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10022, pstmt-20082, rs-50073} Result: [7, 字符串转整数, 给你一个不规则的字符串，请你将他转成整数并返回，规则如下：去掉无效空格，可识别+、-号，无符号默认为正数，当字符串中存在非数字时，从非数字部分开始属于无效部分，直接丢弃即可, 0, 4,     -627813 wdnmd, -627813, 可以用有限自动机来解，也可以是纯粹的参数校验问题, 0]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10022, pstmt-20082, rs-50073} closed
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10022, pstmt-20082} closed
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10022} pool-recycle
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10022} pool-connect
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10022, pstmt-20083} created. select * from `question` where num=?
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10022, pstmt-20083} Parameters : [7]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10022, pstmt-20083} Types : [INTEGER]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10022, pstmt-20083} executed. 41.9796 millis. select * from `question` where num=?
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10022, pstmt-20083, rs-50074} open
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10022, pstmt-20083, rs-50074} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10022, pstmt-20083, rs-50074} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10022, pstmt-20083, rs-50074} closed
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10022, pstmt-20083} closed
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10022} pool-recycle
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10023,procId-318} connected
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10023} closed
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10022} closed
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10024,procId-319} connected
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20084} created. select * from `info` where `account`=?
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20084} Parameters : [1543625674@qq.com]
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20084} Types : [VARCHAR]
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20084} executed. 44.3547 millis. select * from `info` where `account`=?
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20084, rs-50075} open
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20084, rs-50075} Header: [account, name, finished, simple_finished, middle_finished, hard_finished, finished_index, register_time, grade, skillful_lang, java_finished, c_finished, python_finished]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20084, rs-50075} Result: [1543625674@qq.com, NorthBoat, 3, 0, 0, 0, 1010001, 2022-04-05 06:05:05.0, null, Java, 3, 0, 0]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20084, rs-50075} closed
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20084} closed
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20085} created. update `info` set finished=?, java_finished=?, c_finished=?, python_finished=?, finished_index=?, skillful_lang=? where `account`=?
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20085} Parameters : [4, 4, 0, 0, 10100011, Java, 1543625674@qq.com]
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20085} Types : [INTEGER, INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR]
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20085} executed. 82.3571 millis. update `info` set finished=?, java_finished=?, c_finished=?, python_finished=?, finished_index=?, skillful_lang=? where `account`=?
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20085} closed
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20086} created. select * from `result` where `account` = ? and `num` = ?
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20086} Parameters : [1543625674@qq.com, 7]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20086} Types : [VARCHAR, INTEGER]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20086} executed. 41.5749 millis. select * from `result` where `account` = ? and `num` = ?
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10024, pstmt-20086, rs-50076} open
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10024, pstmt-20086, rs-50076} Header: [account, num, title, key1, key2, key3, key4, val1, val2, val3, val4, code]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10024, pstmt-20086, rs-50076} closed
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20086} closed
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20087} created. insert into `result`(`account`, `num`, `title`, `key1`, `key2`, `key3`, `key4`, `val1`, `val2`, `val3`, `val4`, `code`) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20087} Parameters : [1543625674@qq.com, 7, 成功通过 OwO, 通过样例:, 平均用时:, 内存使用:, 创建容器时间:, 21, 0ms, 0MiB, 1291, class Solution{<br>&nbsp;&nbsp;&nbsp;&nbsp;public int strToNum(String str){<br>&nbsp;&nbsp;&nbsp;&nbsp;int len = str.length();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char[] charArray = str.toCharArray();<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int index = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (index < len && charArray[index] == ' ') {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index++;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20087} Types : [VARCHAR, INTEGER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20087} executed. 87.3515 millis. insert into `result`(`account`, `num`, `title`, `key1`, `key2`, `key3`, `key4`, `val1`, `val2`, `val3`, `val4`, `code`) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20087} closed
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20088} created. select * from `detail` where `num`=?
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20088} Parameters : [7]
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20088} Types : [INTEGER]
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20088} executed. 41.1727 millis. select * from `detail` where `num`=?
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20088, rs-50077} open
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20088, rs-50077} Header: [num, title, desc, memory_limit, time_limit, example_input, example_output, tips, customized]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20088, rs-50077} Result: [7, 字符串转整数, 给你一个不规则的字符串，请你将他转成整数并返回，规则如下：去掉无效空格，可识别+、-号，无符号默认为正数，当字符串中存在非数字时，从非数字部分开始属于无效部分，直接丢弃即可, 0, 4, -627813 wdnmd, -627813, 可以用有限自动机来解，也可以是纯粹的参数校验问题, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20088, rs-50077} closed
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20088} closed
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20089} created. select * from `question`
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20089} Parameters : []
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20089} Types : []
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20089} executed. 42.4006 millis. select * from `question`
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} open
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20089, rs-50078} closed
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20089} closed
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20090} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20090} Parameters : [String&Arr]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20090} Types : [VARCHAR]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20090} executed. 41.7436 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20090, rs-50079} open
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20090, rs-50079} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20090, rs-50079} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20090, rs-50079} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20090, rs-50079} closed
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20090} closed
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20091} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20091} Parameters : [Stack&Queue]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20091} Types : [VARCHAR]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20091} executed. 40.553 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20091, rs-50080} open
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20091, rs-50080} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20091, rs-50080} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20091, rs-50080} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20091, rs-50080} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20091, rs-50080} closed
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20091} closed
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20092} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20092} Parameters : [List]
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20092} Types : [VARCHAR]
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20092} executed. 41.2808 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20092, rs-50081} open
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20092, rs-50081} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20092, rs-50081} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20092, rs-50081} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20092, rs-50081} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20092, rs-50081} closed
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20092} closed
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20093} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20093} Parameters : [Stack&Queue]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20093} Types : [VARCHAR]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20093} executed. 39.5284 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20093, rs-50082} open
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20093, rs-50082} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20093, rs-50082} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20093, rs-50082} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20093, rs-50082} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20093, rs-50082} closed
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20093} closed
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20094} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20094} Parameters : [String&Arr]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20094} Types : [VARCHAR]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20094} executed. 40.8135 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20094, rs-50083} open
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20094, rs-50083} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20094, rs-50083} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20094, rs-50083} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20094, rs-50083} closed
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20094} closed
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20095} created. select * from `question`
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20095} Parameters : []
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20095} Types : []
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20095} executed. 40.8672 millis. select * from `question`
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} open
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20095, rs-50084} closed
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20095} closed
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20096} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20096} Parameters : [Stack&Queue]
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20096} Types : [VARCHAR]
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20096} executed. 40.7685 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20096, rs-50085} open
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20096, rs-50085} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20096, rs-50085} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20096, rs-50085} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20096, rs-50085} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20096, rs-50085} closed
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20096} closed
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20097} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20097} Parameters : [String&Arr]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20097} Types : [VARCHAR]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20097} executed. 41.0815 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10024, pstmt-20097, rs-50086} open
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10024, pstmt-20097, rs-50086} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10024, pstmt-20097, rs-50086} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10024, pstmt-20097, rs-50086} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10024, pstmt-20097, rs-50086} closed
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10024, pstmt-20097} closed
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20098} created. select * from `question`
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20098} Parameters : []
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20098} Types : []
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20098} executed. 40.1937 millis. select * from `question`
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} open
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10024, pstmt-20098, rs-50087} closed
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10024, pstmt-20098} closed
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20099} created. select * from `question`
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20099} Parameters : []
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20099} Types : []
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20099} executed. 42.1496 millis. select * from `question`
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} open
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10024, pstmt-20099, rs-50088} closed
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10024, pstmt-20099} closed
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20100} created. select * from `painting`
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20100} Parameters : []
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20100} Types : []
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20100} executed. 39.5672 millis. select * from `painting`
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20100, rs-50089} open
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20100, rs-50089} Header: [num, title, desc, thumb, from, content]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20100, rs-50089} Result: [1, 云朵, 这个作者很懒，没有简述噢, 0, NorthBoat, <div style="background-color: blue; width: 50px; height: 50px; border-radius: 50%; background-color: #fff; box-shadow: #fff 65px -15px 0 -5px,#fff 25px -25px, #fff 30px 10px,#fff 60px 15px 0 -10px,#fff 85px 5px 0 -5px; top: 430px; left: 185px;"></div>]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20100, rs-50089} Result: [2, Test, 测试接口, 0, NorthBoat, <h1 style="color: blue">hahaha</h1>]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20100, rs-50089} Result: [3, HAHAHA, win~win~win~, 0, NorthBoat, <p>我是来搞笑的</p>]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20100, rs-50089} Result: [4, 粉色猛男, reo~reo~reo~, 0, NorthBoat, <strong style="color: pink">我是来搞笑的</strong>]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20100, rs-50089} Result: [5, 哦豁, 啊哈, 0, NorthBoat, <h1 style="color: pick">哦豁</h1>]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10024, pstmt-20100, rs-50089} closed
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10024, pstmt-20100} closed
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20101} created. select * from `topic` where `tag`=?
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20101} Parameters : [Books]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20101} Types : [VARCHAR]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20101} executed. 39.4218 millis. select * from `topic` where `tag`=?
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20101, rs-50090} open
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20101, rs-50090} Header: [num, title, desc, content, tag, from, contact, replies]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20101, rs-50090} Result: [2, C Primer Plus, C语言入门书籍, 强力推荐的一本C语言入门书籍，626页可以让你在C语言的世界里畅游很久，风趣幽默的文笔让人心情愉悦。这里要感谢云巅工作室精彩的翻译。这本书真正的诠释了入门书籍的概念，却又可以为你指出深入的方向，让你在继续前进时不至于迷茫。（作者不仅阐述了语法中正确的形式，同时也即尽可能的阐述读者错误的代码可能会出现的问题，这一反一正相得益彰，值得多次品读）60元的价格也绝对对得起它的价值。相较于国内谭浩强教授的书籍更容易让人理解, Books, 啊哈, northboat@163.com, 0]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20101, rs-50090} Result: [6, 了不起的盖茨比, 菲兹杰拉德的才华就像蝴蝶翅膀上缤纷的图案，完全是天生的, 菲兹杰拉德墓志铭：我们就这样扬着船帆奋力前进。逆水行舟，而浪潮奔流不歇，不停地将我们推回到过去, Books, NorthBoat, 匿, 0]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20101, rs-50090} Result: [7, 《复活》, 托尔斯泰 著, 复活是托尔斯泰的晚期代表作。这是托尔斯泰的世界观已经发生了激变，抛弃了上层地主贵族阶级的传统观点，用宗法农民的眼光重新审查了各种社会现象，通过男女主仍的遭遇淋漓尽致地描绘出一幅幅沙俄社会的真实图景, Books, NorthBoat, northboat@163.com, 0]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10024, pstmt-20101, rs-50090} closed
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10024, pstmt-20101} closed
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20102} created. select * from `painting`
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20102} Parameters : []
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20102} Types : []
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20102} executed. 40.1893 millis. select * from `painting`
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20102, rs-50091} open
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20102, rs-50091} Header: [num, title, desc, thumb, from, content]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20102, rs-50091} Result: [1, 云朵, 这个作者很懒，没有简述噢, 0, NorthBoat, <div style="background-color: blue; width: 50px; height: 50px; border-radius: 50%; background-color: #fff; box-shadow: #fff 65px -15px 0 -5px,#fff 25px -25px, #fff 30px 10px,#fff 60px 15px 0 -10px,#fff 85px 5px 0 -5px; top: 430px; left: 185px;"></div>]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20102, rs-50091} Result: [2, Test, 测试接口, 0, NorthBoat, <h1 style="color: blue">hahaha</h1>]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20102, rs-50091} Result: [3, HAHAHA, win~win~win~, 0, NorthBoat, <p>我是来搞笑的</p>]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20102, rs-50091} Result: [4, 粉色猛男, reo~reo~reo~, 0, NorthBoat, <strong style="color: pink">我是来搞笑的</strong>]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20102, rs-50091} Result: [5, 哦豁, 啊哈, 0, NorthBoat, <h1 style="color: pick">哦豁</h1>]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10024, pstmt-20102, rs-50091} closed
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10024, pstmt-20102} closed
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20103} created. select * from `topic` where `tag`=?
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20103} Parameters : [Books]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20103} Types : [VARCHAR]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20103} executed. 39.7515 millis. select * from `topic` where `tag`=?
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20103, rs-50092} open
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20103, rs-50092} Header: [num, title, desc, content, tag, from, contact, replies]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20103, rs-50092} Result: [2, C Primer Plus, C语言入门书籍, 强力推荐的一本C语言入门书籍，626页可以让你在C语言的世界里畅游很久，风趣幽默的文笔让人心情愉悦。这里要感谢云巅工作室精彩的翻译。这本书真正的诠释了入门书籍的概念，却又可以为你指出深入的方向，让你在继续前进时不至于迷茫。（作者不仅阐述了语法中正确的形式，同时也即尽可能的阐述读者错误的代码可能会出现的问题，这一反一正相得益彰，值得多次品读）60元的价格也绝对对得起它的价值。相较于国内谭浩强教授的书籍更容易让人理解, Books, 啊哈, northboat@163.com, 0]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20103, rs-50092} Result: [6, 了不起的盖茨比, 菲兹杰拉德的才华就像蝴蝶翅膀上缤纷的图案，完全是天生的, 菲兹杰拉德墓志铭：我们就这样扬着船帆奋力前进。逆水行舟，而浪潮奔流不歇，不停地将我们推回到过去, Books, NorthBoat, 匿, 0]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20103, rs-50092} Result: [7, 《复活》, 托尔斯泰 著, 复活是托尔斯泰的晚期代表作。这是托尔斯泰的世界观已经发生了激变，抛弃了上层地主贵族阶级的传统观点，用宗法农民的眼光重新审查了各种社会现象，通过男女主仍的遭遇淋漓尽致地描绘出一幅幅沙俄社会的真实图景, Books, NorthBoat, northboat@163.com, 0]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10024, pstmt-20103, rs-50092} closed
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10024, pstmt-20103} closed
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20104} created. select * from `topic` where `tag`=?
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20104} Parameters : [Teams]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20104} Types : [VARCHAR]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20104} executed. 41.6885 millis. select * from `topic` where `tag`=?
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20104, rs-50093} open
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20104, rs-50093} Header: [num, title, desc, content, tag, from, contact, replies]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20104, rs-50093} Result: [3, 大学生计算机设计大赛, 急需前端开发人员一枚, 2022年大学生计算机设计大赛即将开始，四月十五号提交校赛作品，现本组前端页面还差关键步骤尚未完成，后端已然较为完善，项目基于docker容器技术，是一个云判题OJ平台，急需一位前端大佬完善前端功能，一起进步。有意者请在评论区留下联系方式，在下必有重谢, Teams, NorthBoat, 1543625674@qq.com, 0]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20104, rs-50093} Result: [9, 运维老哥救我狗命, 跨域请求，负载均衡，远程Docker, 前端Vue后端SpringBoot，等待部署上线，懂哥帮帮, Teams, NorthBoat, 1543625674@qq.com, 0]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10024, pstmt-20104, rs-50093} closed
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10024, pstmt-20104} closed
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20105} created. select * from `topic` where `tag`=?
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20105} Parameters : [Push]
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20105} Types : [VARCHAR]
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20105} executed. 41.326 millis. select * from `topic` where `tag`=?
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20105, rs-50094} open
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20105, rs-50094} Header: [num, title, desc, content, tag, from, contact, replies]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20105, rs-50094} Result: [4, 字节内推, 17届老学长在线帮推, 又是一年金三银四，不管你是大三决定参加工作提前积累实习经验，还是大四即将毕业准备进入社会，抑或是大二想提前体验工作生活，可以直接发送邮件到我的邮箱或加我的微信联系vx: testhahaha, Push, test, test@163.com, 0]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10024, pstmt-20105, rs-50094} closed
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10024, pstmt-20105} closed
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10024} pool-connect
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20106} created. select * from `problem`
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20106} Parameters : []
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20106} Types : []
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20106} executed. 41.48 millis. select * from `problem`
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20106, rs-50095} open
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20106, rs-50095} Header: [num, title, href, level, tag]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20106, rs-50095} Result: [1, 盛最多水的容器, https://leetcode-cn.com/problems/container-with-most-water/, 难, 双指针]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20106, rs-50095} Result: [2, 无重复字符的最长子串, https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/, 中, 哈希、滑动窗口]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20106, rs-50095} Result: [3, 正则表达式匹配, https://leetcode-cn.com/problems/regular-expression-matching/, 难, 动态规划、有限自动机]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20106, rs-50095} Result: [4, 提莫攻击, https://leetcode-cn.com/problems/teemo-attacking/, 易, 数组、模拟]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10024, pstmt-20106, rs-50095} closed
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10024, pstmt-20106} closed
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10024} pool-recycle
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10024} closed
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10025,procId-320} connected
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10025} pool-connect
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10025, pstmt-20107} created. select * from `question`
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10025, pstmt-20107} Parameters : []
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10025, pstmt-20107} Types : []
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10025, pstmt-20107} executed. 43.6144 millis. select * from `question`
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} open
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10025, pstmt-20107, rs-50096} closed
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10025, pstmt-20107} closed
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10025} pool-recycle
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10025} pool-connect
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10025, pstmt-20108} created. select * from `detail` where `num`=?
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10025, pstmt-20108} Parameters : [8]
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10025, pstmt-20108} Types : [INTEGER]
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10025, pstmt-20108} executed. 45.823 millis. select * from `detail` where `num`=?
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10025, pstmt-20108, rs-50097} open
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10025, pstmt-20108, rs-50097} Header: [num, title, desc, memory_limit, time_limit, example_input, example_output, tips, customized]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10025, pstmt-20108, rs-50097} Result: [8, 第三大的数, 给你一个整数数组，请找到其中第三大的数并返回。当数组中没有第三大的数时，返回最大的数，如1 2 2 2没有第三大的数（看值不看数量），返回2, 0, 2, 1 2 2 3, 1, 排序、贪婪, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10025, pstmt-20108, rs-50097} closed
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10025, pstmt-20108} closed
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10025} pool-recycle
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10025} pool-connect
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10025, pstmt-20109} created. select * from `question` where num=?
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10025, pstmt-20109} Parameters : [8]
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10025, pstmt-20109} Types : [INTEGER]
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10025, pstmt-20109} executed. 46.0386 millis. select * from `question` where num=?
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10025, pstmt-20109, rs-50098} open
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10025, pstmt-20109, rs-50098} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10025, pstmt-20109, rs-50098} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10025, pstmt-20109, rs-50098} closed
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10025, pstmt-20109} closed
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10025} pool-recycle
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10026,procId-321} connected
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20110} created. select * from `info` where `account`=?
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20110} Parameters : [1543625674@qq.com]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20110} Types : [VARCHAR]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20110} executed. 78.9053 millis. select * from `info` where `account`=?
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20110, rs-50099} open
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20110, rs-50099} Header: [account, name, finished, simple_finished, middle_finished, hard_finished, finished_index, register_time, grade, skillful_lang, java_finished, c_finished, python_finished]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20110, rs-50099} Result: [1543625674@qq.com, NorthBoat, 4, 0, 0, 0, 10100011, 2022-04-05 06:05:05.0, null, Java, 4, 0, 0]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20110, rs-50099} closed
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20110} closed
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20111} created. update `info` set finished=?, java_finished=?, c_finished=?, python_finished=?, finished_index=?, skillful_lang=? where `account`=?
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20111} Parameters : [5, 5, 0, 0, 101000111, Java, 1543625674@qq.com]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20111} Types : [INTEGER, INTEGER, INTEGER, INTEGER, VARCHAR, VARCHAR, VARCHAR]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20111} executed. 83.0819 millis. update `info` set finished=?, java_finished=?, c_finished=?, python_finished=?, finished_index=?, skillful_lang=? where `account`=?
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20111} closed
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20112} created. select * from `result` where `account` = ? and `num` = ?
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20112} Parameters : [1543625674@qq.com, 8]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20112} Types : [VARCHAR, INTEGER]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20112} executed. 41.5012 millis. select * from `result` where `account` = ? and `num` = ?
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20112, rs-50100} open
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20112, rs-50100} Header: [account, num, title, key1, key2, key3, key4, val1, val2, val3, val4, code]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20112, rs-50100} closed
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20112} closed
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20113} created. insert into `result`(`account`, `num`, `title`, `key1`, `key2`, `key3`, `key4`, `val1`, `val2`, `val3`, `val4`, `code`) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20113} Parameters : [1543625674@qq.com, 8, 成功通过 OwO, 通过样例:, 平均用时:, 内存使用:, 创建容器时间:, 21, 0ms, 0MiB, 1027, class Solution{<br>&nbsp;&nbsp;&nbsp;&nbsp;public int thirdMax(int[] nums) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Arrays.sort(nums);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reverse(nums);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 1, diff = 1; i < nums.length; ++i) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nums[i] != nums[i - 1] && ++diff == 3) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20113} Types : [VARCHAR, INTEGER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20113} executed. 80.9084 millis. insert into `result`(`account`, `num`, `title`, `key1`, `key2`, `key3`, `key4`, `val1`, `val2`, `val3`, `val4`, `code`) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20113} closed
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10026, pstmt-20114} created. select * from `question`
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10026, pstmt-20114} Parameters : []
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10026, pstmt-20114} Types : []
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10026, pstmt-20114} executed. 45.3203 millis. select * from `question`
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} open
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10026, pstmt-20114, rs-50101} closed
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10026, pstmt-20114} closed
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20115} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20115} Parameters : [String&Arr]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20115} Types : [VARCHAR]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20115} executed. 41.0319 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20115, rs-50102} open
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20115, rs-50102} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20115, rs-50102} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20115, rs-50102} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20115, rs-50102} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20115, rs-50102} closed
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20115} closed
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20116} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20116} Parameters : [Stack&Queue]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20116} Types : [VARCHAR]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20116} executed. 39.8513 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20116, rs-50103} open
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20116, rs-50103} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20116, rs-50103} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20116, rs-50103} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20116, rs-50103} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20116, rs-50103} closed
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20116} closed
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20117} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20117} Parameters : [List]
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20117} Types : [VARCHAR]
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20117} executed. 41.0888 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20117, rs-50104} open
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20117, rs-50104} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20117, rs-50104} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20117, rs-50104} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20117, rs-50104} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20117, rs-50104} closed
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20117} closed
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10026, pstmt-20118} created. select * from `question`
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10026, pstmt-20118} Parameters : []
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10026, pstmt-20118} Types : []
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10026, pstmt-20118} executed. 40.2762 millis. select * from `question`
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} open
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10026, pstmt-20118, rs-50105} closed
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10026, pstmt-20118} closed
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10026, pstmt-20119} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10026, pstmt-20119} Parameters : [Tree]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10026, pstmt-20119} Types : [VARCHAR]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10026, pstmt-20119} executed. 41.0746 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10026, pstmt-20119, rs-50106} open
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10026, pstmt-20119, rs-50106} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10026, pstmt-20119, rs-50106} closed
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10026, pstmt-20119} closed
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10026, pstmt-20120} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10026, pstmt-20120} Parameters : [Stack&Queue]
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10026, pstmt-20120} Types : [VARCHAR]
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10026, pstmt-20120} executed. 41.173 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10026, pstmt-20120, rs-50107} open
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10026, pstmt-20120, rs-50107} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10026, pstmt-20120, rs-50107} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10026, pstmt-20120, rs-50107} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10026, pstmt-20120, rs-50107} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10026, pstmt-20120, rs-50107} closed
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10026, pstmt-20120} closed
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10026, pstmt-20121} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10026, pstmt-20121} Parameters : [String&Arr]
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10026, pstmt-20121} Types : [VARCHAR]
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10026, pstmt-20121} executed. 40.7931 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10026, pstmt-20121, rs-50108} open
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10026, pstmt-20121, rs-50108} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10026, pstmt-20121, rs-50108} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10026, pstmt-20121, rs-50108} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10026, pstmt-20121, rs-50108} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10026, pstmt-20121, rs-50108} closed
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10026, pstmt-20121} closed
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20122} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20122} Parameters : [List]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20122} Types : [VARCHAR]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20122} executed. 43.3107 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20122, rs-50109} open
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20122, rs-50109} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20122, rs-50109} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20122, rs-50109} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20122, rs-50109} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10026, pstmt-20122, rs-50109} closed
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10026, pstmt-20122} closed
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20123} created. select * from `question`
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20123} Parameters : []
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20123} Types : []
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20123} executed. 41.4579 millis. select * from `question`
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} open
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10026, pstmt-20123, rs-50110} closed
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10026, pstmt-20123} closed
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10025} pool-connect
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20124} created. select * from `question`
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10025, pstmt-20125} created. select * from `news` where `version`=?
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20124} Parameters : []
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20124} Types : []
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10025, pstmt-20125} Parameters : [1]
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10025, pstmt-20125} Types : [INTEGER]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20124} executed. 39.8439 millis. select * from `question`
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} open
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10025, pstmt-20125} executed. 41.9483 millis. select * from `news` where `version`=?
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10025, pstmt-20125, rs-50112} open
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10025, pstmt-20125, rs-50112} Header: [version, user_num, visit_num, news_one, news_two, news_three, news_four, java_using, c_using, python_using]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10025, pstmt-20125, rs-50112} Result: [1, 3, 24, 1, 2, 3, 4, 6, 0, 0]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10025, pstmt-20125, rs-50112} closed
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10025, pstmt-20125} closed
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10025} pool-recycle
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10026, pstmt-20124, rs-50111} closed
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10026, pstmt-20124} closed
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20126} created. select * from `info`
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20126} Parameters : []
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20126} Types : []
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20126} executed. 40.1571 millis. select * from `info`
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20126, rs-50113} open
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20126, rs-50113} Header: [account, name, finished, simple_finished, middle_finished, hard_finished, finished_index, register_time, grade, skillful_lang, java_finished, c_finished, python_finished]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20126, rs-50113} Result: [1543625674@qq.com, NorthBoat, 5, 0, 0, 0, 101000111, 2022-04-05 06:05:05.0, null, Java, 5, 0, 0]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20126, rs-50113} Result: [northboat@163.com, 啊哈, 0, 0, 0, 0, 0, 2022-04-06 03:28:32.0, null, null, 0, 0, 0]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20126, rs-50113} Result: [xurongxin@foxmail.com, op, 0, 0, 0, 0, 0, 2022-04-13 01:31:55.0, null, null, 0, 0, 0]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10026, pstmt-20126, rs-50113} closed
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10026, pstmt-20126} closed
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10026} pool-connect
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20127} created. select * from `question`
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20127} Parameters : []
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20127} Types : []
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20127} executed. 42.6928 millis. select * from `question`
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} open
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10026, pstmt-20127, rs-50114} closed
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10026, pstmt-20127} closed
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10026} pool-recycle
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10026} closed
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10025} closed
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10027,procId-322} connected
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10027} pool-connect
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10027, pstmt-20128} created. select * from `detail` where `num`=?
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10027, pstmt-20128} Parameters : [0]
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10027, pstmt-20128} Types : [INTEGER]
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10027, pstmt-20128} executed. 43.9371 millis. select * from `detail` where `num`=?
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10027, pstmt-20128, rs-50115} open
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10027, pstmt-20128, rs-50115} Header: [num, title, desc, memory_limit, time_limit, example_input, example_output, tips, customized]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10027, pstmt-20128, rs-50115} Result: [0, 翻转整数, 将整数翻转过来, 0, 2, 1234, 4321, 栈, 1]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10027, pstmt-20128, rs-50115} closed
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10027, pstmt-20128} closed
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10027} pool-recycle
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10027} pool-connect
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10027, pstmt-20129} created. select * from `question` where num=?
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10027, pstmt-20129} Parameters : [0]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10027, pstmt-20129} Types : [INTEGER]
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10027, pstmt-20129} executed. 40.5276 millis. select * from `question` where num=?
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10027, pstmt-20129, rs-50116} open
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10027, pstmt-20129, rs-50116} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10027, pstmt-20129, rs-50116} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10027, pstmt-20129, rs-50116} closed
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10027, pstmt-20129} closed
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10027} pool-recycle
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10028,procId-323} connected
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10028} pool-connect
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10028, pstmt-20130} created. select * from `question`
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10028, pstmt-20130} Parameters : []
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10028, pstmt-20130} Types : []
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10028, pstmt-20130} executed. 41.4329 millis. select * from `question`
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} open
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10028, pstmt-20130, rs-50117} closed
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10028, pstmt-20130} closed
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10028} pool-recycle
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10028} pool-connect
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10028, pstmt-20131} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10028, pstmt-20131} Parameters : [List]
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10028, pstmt-20131} Types : [VARCHAR]
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10028, pstmt-20131} executed. 41.4925 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10028, pstmt-20131, rs-50118} open
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10028, pstmt-20131, rs-50118} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10028, pstmt-20131, rs-50118} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10028, pstmt-20131, rs-50118} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10028, pstmt-20131, rs-50118} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10028, pstmt-20131, rs-50118} closed
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10028, pstmt-20131} closed
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10028} pool-recycle
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10028} pool-connect
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10028, pstmt-20132} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10028, pstmt-20132} Parameters : [List]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10028, pstmt-20132} Types : [VARCHAR]
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10028, pstmt-20132} executed. 43.5436 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10028, pstmt-20132, rs-50119} open
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10028, pstmt-20132, rs-50119} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10028, pstmt-20132, rs-50119} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10028, pstmt-20132, rs-50119} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10028, pstmt-20132, rs-50119} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-6 druid.sql.ResultSet - {conn-10028, pstmt-20132, rs-50119} closed
DEBUG http-nio-8089-exec-6 druid.sql.Statement - {conn-10028, pstmt-20132} closed
DEBUG http-nio-8089-exec-6 druid.sql.Connection - {conn-10028} pool-recycle
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10028} closed
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10027} closed
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10029,procId-324} connected
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10029} pool-connect
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10029, pstmt-20133} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10029, pstmt-20133} Parameters : [List]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10029, pstmt-20133} Types : [VARCHAR]
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10029, pstmt-20133} executed. 47.8771 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10029, pstmt-20133, rs-50120} open
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10029, pstmt-20133, rs-50120} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10029, pstmt-20133, rs-50120} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10029, pstmt-20133, rs-50120} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10029, pstmt-20133, rs-50120} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-3 druid.sql.ResultSet - {conn-10029, pstmt-20133, rs-50120} closed
DEBUG http-nio-8089-exec-3 druid.sql.Statement - {conn-10029, pstmt-20133} closed
DEBUG http-nio-8089-exec-3 druid.sql.Connection - {conn-10029} pool-recycle
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10029} pool-connect
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10029, pstmt-20134} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10029, pstmt-20134} Parameters : [List]
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10029, pstmt-20134} Types : [VARCHAR]
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10029, pstmt-20134} executed. 42.8281 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10029, pstmt-20134, rs-50121} open
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10029, pstmt-20134, rs-50121} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10029, pstmt-20134, rs-50121} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10029, pstmt-20134, rs-50121} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10029, pstmt-20134, rs-50121} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-2 druid.sql.ResultSet - {conn-10029, pstmt-20134, rs-50121} closed
DEBUG http-nio-8089-exec-2 druid.sql.Statement - {conn-10029, pstmt-20134} closed
DEBUG http-nio-8089-exec-2 druid.sql.Connection - {conn-10029} pool-recycle
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10029} pool-connect
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10029, pstmt-20135} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10029, pstmt-20135} Parameters : [List]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10029, pstmt-20135} Types : [VARCHAR]
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10029, pstmt-20135} executed. 39.4318 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10029, pstmt-20135, rs-50122} open
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10029, pstmt-20135, rs-50122} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10029, pstmt-20135, rs-50122} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10029, pstmt-20135, rs-50122} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10029, pstmt-20135, rs-50122} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-4 druid.sql.ResultSet - {conn-10029, pstmt-20135, rs-50122} closed
DEBUG http-nio-8089-exec-4 druid.sql.Statement - {conn-10029, pstmt-20135} closed
DEBUG http-nio-8089-exec-4 druid.sql.Connection - {conn-10029} pool-recycle
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10029} closed
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10030,procId-325} connected
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10030} pool-connect
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10030, pstmt-20136} created. select * from `question` where tag=?
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10030, pstmt-20136} Parameters : [List]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10030, pstmt-20136} Types : [VARCHAR]
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10030, pstmt-20136} executed. 46.0996 millis. select * from `question` where tag=?
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10030, pstmt-20136, rs-50123} open
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10030, pstmt-20136, rs-50123} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10030, pstmt-20136, rs-50123} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10030, pstmt-20136, rs-50123} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10030, pstmt-20136, rs-50123} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-5 druid.sql.ResultSet - {conn-10030, pstmt-20136, rs-50123} closed
DEBUG http-nio-8089-exec-5 druid.sql.Statement - {conn-10030, pstmt-20136} closed
DEBUG http-nio-8089-exec-5 druid.sql.Connection - {conn-10030} pool-recycle
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10030} pool-connect
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10030, pstmt-20137} created. select * from `news` where `version`=?
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10030, pstmt-20137} Parameters : [1]
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10030, pstmt-20137} Types : [INTEGER]
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10030, pstmt-20137} executed. 42.2858 millis. select * from `news` where `version`=?
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10030, pstmt-20137, rs-50124} open
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10030, pstmt-20137, rs-50124} Header: [version, user_num, visit_num, news_one, news_two, news_three, news_four, java_using, c_using, python_using]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10030, pstmt-20137, rs-50124} Result: [1, 3, 24, 1, 2, 3, 4, 6, 0, 0]
DEBUG http-nio-8089-exec-7 druid.sql.ResultSet - {conn-10030, pstmt-20137, rs-50124} closed
DEBUG http-nio-8089-exec-7 druid.sql.Statement - {conn-10030, pstmt-20137} closed
DEBUG http-nio-8089-exec-7 druid.sql.Connection - {conn-10030} pool-recycle
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10030} pool-connect
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10030, pstmt-20138} created. select * from `question`
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10030, pstmt-20138} Parameters : []
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10030, pstmt-20138} Types : []
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10030, pstmt-20138} executed. 47.6173 millis. select * from `question`
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} open
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
DEBUG http-nio-8089-exec-8 druid.sql.ResultSet - {conn-10030, pstmt-20138, rs-50125} closed
DEBUG http-nio-8089-exec-8 druid.sql.Statement - {conn-10030, pstmt-20138} closed
DEBUG http-nio-8089-exec-8 druid.sql.Connection - {conn-10030} pool-recycle
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10030} pool-connect
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10030, pstmt-20139} created. select * from `info`
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10030, pstmt-20139} Parameters : []
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10030, pstmt-20139} Types : []
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10030, pstmt-20139} executed. 45.5318 millis. select * from `info`
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10030, pstmt-20139, rs-50126} open
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10030, pstmt-20139, rs-50126} Header: [account, name, finished, simple_finished, middle_finished, hard_finished, finished_index, register_time, grade, skillful_lang, java_finished, c_finished, python_finished]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10030, pstmt-20139, rs-50126} Result: [1543625674@qq.com, NorthBoat, 5, 0, 0, 0, 101000111, 2022-04-05 06:05:05.0, null, Java, 5, 0, 0]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10030, pstmt-20139, rs-50126} Result: [northboat@163.com, 啊哈, 0, 0, 0, 0, 0, 2022-04-06 03:28:32.0, null, null, 0, 0, 0]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10030, pstmt-20139, rs-50126} Result: [xurongxin@foxmail.com, op, 0, 0, 0, 0, 0, 2022-04-13 01:31:55.0, null, null, 0, 0, 0]
DEBUG http-nio-8089-exec-9 druid.sql.ResultSet - {conn-10030, pstmt-20139, rs-50126} closed
DEBUG http-nio-8089-exec-9 druid.sql.Statement - {conn-10030, pstmt-20139} closed
DEBUG http-nio-8089-exec-9 druid.sql.Connection - {conn-10030} pool-recycle
DEBUG Druid-ConnectionPool-Create-1400363167 druid.sql.Connection - {conn-10031,procId-326} connected
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10031} pool-connect
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10031, pstmt-20140} created. select * from `topic`
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10031, pstmt-20140} Parameters : []
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10031, pstmt-20140} Types : []
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10031, pstmt-20140} executed. 44.6806 millis. select * from `topic`
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} open
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Header: [num, title, desc, content, tag, from, contact, replies]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [1, Test, hahaha, 这是一次测试，第一条话题, 划水闲聊, NorthBoat, 1543625674@qq.com, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [2, C Primer Plus, C语言入门书籍, 强力推荐的一本C语言入门书籍，626页可以让你在C语言的世界里畅游很久，风趣幽默的文笔让人心情愉悦。这里要感谢云巅工作室精彩的翻译。这本书真正的诠释了入门书籍的概念，却又可以为你指出深入的方向，让你在继续前进时不至于迷茫。（作者不仅阐述了语法中正确的形式，同时也即尽可能的阐述读者错误的代码可能会出现的问题，这一反一正相得益彰，值得多次品读）60元的价格也绝对对得起它的价值。相较于国内谭浩强教授的书籍更容易让人理解, Books, 啊哈, northboat@163.com, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [3, 大学生计算机设计大赛, 急需前端开发人员一枚, 2022年大学生计算机设计大赛即将开始，四月十五号提交校赛作品，现本组前端页面还差关键步骤尚未完成，后端已然较为完善，项目基于docker容器技术，是一个云判题OJ平台，急需一位前端大佬完善前端功能，一起进步。有意者请在评论区留下联系方式，在下必有重谢, Teams, NorthBoat, 1543625674@qq.com, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [4, 字节内推, 17届老学长在线帮推, 又是一年金三银四，不管你是大三决定参加工作提前积累实习经验，还是大四即将毕业准备进入社会，抑或是大二想提前体验工作生活，可以直接发送邮件到我的邮箱或加我的微信联系vx: testhahaha, Push, test, test@163.com, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [5, Writing Test, hahaha, hope all right, 划水闲聊, NorthBoat, 匿, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [6, 了不起的盖茨比, 菲兹杰拉德的才华就像蝴蝶翅膀上缤纷的图案，完全是天生的, 菲兹杰拉德墓志铭：我们就这样扬着船帆奋力前进。逆水行舟，而浪潮奔流不歇，不停地将我们推回到过去, Books, NorthBoat, 匿, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [7, 《复活》, 托尔斯泰 著, 复活是托尔斯泰的晚期代表作。这是托尔斯泰的世界观已经发生了激变，抛弃了上层地主贵族阶级的传统观点，用宗法农民的眼光重新审查了各种社会现象，通过男女主仍的遭遇淋漓尽致地描绘出一幅幅沙俄社会的真实图景, Books, NorthBoat, northboat@163.com, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [8, 前端初步写完辽, 舒服哟, 开摆！, 划水闲聊, NorthBoat, 匿, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} Result: [9, 运维老哥救我狗命, 跨域请求，负载均衡，远程Docker, 前端Vue后端SpringBoot，等待部署上线，懂哥帮帮, Teams, NorthBoat, 1543625674@qq.com, 0]
DEBUG http-nio-8089-exec-10 druid.sql.ResultSet - {conn-10031, pstmt-20140, rs-50127} closed
DEBUG http-nio-8089-exec-10 druid.sql.Statement - {conn-10031, pstmt-20140} closed
DEBUG http-nio-8089-exec-10 druid.sql.Connection - {conn-10031} pool-recycle
DEBUG http-nio-8089-exec-1 druid.sql.Connection - {conn-10031} pool-connect
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10031, pstmt-20141} created. select * from `question`
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10031, pstmt-20141} Parameters : []
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10031, pstmt-20141} Types : []
DEBUG http-nio-8089-exec-1 druid.sql.Statement - {conn-10031, pstmt-20141} executed. 41.6478 millis. select * from `question`
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} open
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Header: [num, title, level, thumb, example, name, tag, func]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [0, 翻转整数, 易, 0, 21, reverseNum, Stack&Queue, int reverseNum(int num)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [1, 有效的括号, 易, 0, 17, validBrackets, Stack&Queue, boolean validBrackets(String brackets)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [2, 简化路径, 中, 0, 12, simplifyPath, Stack&Queue, String simplifyPath(String path)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [3, 链表的头插法, 易, 0, 21, insertByHead, List, Node insertByHead(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [4, 链表的尾插法, 易, 0, 21, insertByTail, List, Node insertByTail(int[] nums)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [5, 删除链表的倒数第N个节点, 中, 0, 21, removeNthFromEnd, List, Node removeNthFromEnd(Node head, int n)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [6, 最长的公共前缀, 易, 0, 17, longestCommonPrefix, String&Arr, String longestCommonPrefix(String[] strs)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [7, 字符串转整数, 中, 0, 21, strToNum, String&Arr, int strToNum(String str)]
DEBUG http-nio-8089-exec-1 druid.sql.ResultSet - {conn-10031, pstmt-20141, rs-50128} Result: [8, 第三大的数, 易, 0, 21, thirdMax, String&Arr, int thirdMax(int[] nums)]
